apiVersion: v1
kind: Service
metadata:
  name: wordpress
  labels:
    app: wordpress
spec:
  # headless service
  clusterIP: None
  ports:
    - port: 80
  selector:
    app: wordpress
    tier: frontend
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wp-pv-claim
  labels:
    app: wordpress
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: wordpress
  labels:
    app: wordpress
spec:
  replicas: 1
  serviceName: wordpress
  selector:
    matchLabels:
      app: wordpress
      tier: frontend
  template:
    metadata:
      labels:
        app: wordpress
        tier: frontend
    spec:
      containers:
      - image: wordpress:4.8-apache
        name: wordpress
        env:
        - name: WORDPRESS_DB_HOST
          value: wordpress-mysql
        - name: WORDPRESS_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-pass
              key: password
        ports:
        - containerPort: 80
          name: wordpress
        volumeMounts:
        - name: wordpress-persistent-storage
          mountPath: /var/www/html
      volumes:
      - name: wordpress-persistent-storage
        persistentVolumeClaim:
          claimName: wp-pv-claim
---
# Ingress confirguration for this app, nginx or another ingress controller must be deployed first
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: wp-ing
  labels:
    name: wp-ing
  annotations:
    nginx.ingress.kubernetes.io/limit-rps: "7"
spec:
  # k get ingressclass
  ingressClassName: nginx
  # how to route the traffic
  rules:
  # url for browser, uses nip.io wp-139.59.192.228.nip.io
  - host: FQDN
    http:
      paths:
      - path: /
        # anything that starts with / are routed to 
        pathType: Prefix
        backend:
          service:
            name: wordpress
            port:
              number: 80